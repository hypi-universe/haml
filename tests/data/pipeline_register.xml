<!--
    By using mappings, a step can extract info from
    1. env
    2. message - the original message
    3. message.field.<name> - into a target field
    If no mappings are provided, the step sends all the message's fields into the plugin
    For HTTP, the fields in a message are obtained by using the content type.
    application/json, form-url-encoded and multipart are supported.
    Any other content type is unparsed. This is implemented by the default "step" plugin.
    The pipeline can set the "first-step-plugin" attribute to another plugin which behaves differently.
    In which case, the unparsed payload is passed to the plugin using tmpfs (linux), normal file on windows.
    The first-step-plugin is implicit unless specified, we use the built in plugin to interpret the supported content types.
    Manually providing it just overrides the default.
    Subsequent steps receive the output of the last step if no mappings are provided.
    If there are mappings then they get only the fields mapped.
    An entire step's output can be mapping by just using the step's name.


-->
<pipeline>
    <!-- <builder-name>:path/to/src|file:path/to/src/Dockerfile|docker:image-name:and-version -->
    <step name="create_acc" provider="image:tag">
        <mapping from="${args.email}" to="args.email"/>
        <mapping from="${env.GOOGLE_PLACE_KEY}" to="env.GOOGLE_PLACE_KEY"/>
        <mapping from="${env.STRIPE_API_KEY}" to="env.STRIPE_API_KEY"/>
    </step>
</pipeline>
